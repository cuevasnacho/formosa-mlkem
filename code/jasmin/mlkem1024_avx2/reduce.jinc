require "params.jinc"

param int QINV    = 62209;     /* q^(-1) mod 2^16 */
param int MONT    = 2285;      /* 2^16 % Q */
param int BARR    = 20159;     /* (1U << 26)/MLKEM_Q + 1 */

inline 
fn __csubq(reg u256 r qx16) -> reg u256
{
  reg u256 t;
  r = #VPSUB_16u16(r, qx16);
  t = #VPSRA_16u16(r, 15);
  t = #VPAND_256(t, qx16);
  r = #VPADD_16u16(t, r);
  return r;
}

inline 
fn __red16x(reg u256 r qx16 vx16) -> reg u256
{
  reg u256 x;
  x = #VPMULH_16u16(r, vx16);
  x = #VPSRA_16u16(x, 10);
  x = #VPMULL_16u16(x, qx16);
  r = #VPSUB_16u16(r, x);
  return r;
}

inline 
fn __fqmulprecomp16x(reg u256 b al ah qx16) -> reg u256
{
  reg u256 x;
  x = #VPMULL_16u16(al, b);
  b = #VPMULH_16u16(ah, b);
  x = #VPMULH_16u16(x, qx16);
  b = #VPSUB_16u16(b, x);
  return b;
}

inline
fn __fqmulx16(reg u256 a b qx16 qinvx16) -> reg u256
{
  reg u256 rd rhi rlo;
  rhi = #VPMULH_16u16(a, b);
  rlo = #VPMULL_16u16(a, b);

  rlo = #VPMULL_16u16(rlo, qinvx16);
  rlo = #VPMULH_16u16(rlo, qx16);
  rd = #VPSUB_16u16(rhi, rlo);

  return rd;
}
